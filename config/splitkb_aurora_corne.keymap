/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        left_hand_positional_hold_tap: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HAND_POSITIONAL_HOLD_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <5 17 29 30 18 6 7 8 9 10 11 19 20 21 22 23 31 32 33 34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
      &kp TAB  &kp Q  &kp W      &kp E         &kp R                   &kp T             &kp Y         &kp U                   &kp I    &kp O     &kp P       &to 5
&mt LCTRL ESC  &kp A  &kp S      &kp D         &kp F                   &kp G             &kp H         &kp J                   &kp K    &kp L  &kp SEMI     &kp SQT
    &kp LSHFT  &kp Z  &kp X      &kp C         &kp V                   &kp B             &kp N         &kp M               &kp COMMA  &kp DOT  &kp FSLH  &kp K_MENU
                             &lt 1 TAB  &lt 3 ESCAPE  &mt LEFT_CONTROL SPACE  &mt LSHIFT ENTER  &lt 4 DELETE  &mt LEFT_ALT BACKSPACE
            >;
        };

        MEDIA {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
     &kp TAB  &kp LANGUAGE_1     &kp LANG2     &kp LANG3     &kp LANG4  &kp PRINTSCREEN      &trans         &trans    &trans            &kp K_PREV  &kp K_PLAY_PAUSE            &kp K_NEXT
  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4      &trans         &trans    &trans          &kp K_VOL_DN        &kp K_MUTE          &kp K_VOL_UP
&out OUT_TOG          &trans        &trans    &kp K_CALC        &trans        &kp K_WWW  &kp K_MENU  &kp C_AL_MAIL    &trans  &kp C_BRIGHTNESS_DEC             &kp 0  &kp C_BRIGHTNESS_INC
                                                &kp LGUI        &trans        &kp SPACE     &kp RET         &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans    &trans     &trans  &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans  &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI    &trans  &kp SPACE    &kp RET     &trans         &kp RALT
            >;
        };

        NAVIGATION {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp K_CUT
&trans       &kp F12      &kp HOME     &kp PG_DN     &kp PG_UP       &kp END      &kp LEFT      &kp DOWN        &kp UP     &kp RIGHT       &kp F11   &kp K_COPY
&trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8        &kp F9       &kp F10  &kp K_PASTE
                                          &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        SYMBOLS {
            bindings = <
        &kp TILDE  &kp EXCLAMATION         &kp AT          &kp HASH      &kp DOLLAR           &kp PERCENT              &kp CARET    &kp AMPERSAND       &kp ASTERISK         &kp MINUS  &kp EQUAL          &kp PLUS
&kp DOUBLE_QUOTES        &kp COLON  &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN   &kp SEMI  &kp SINGLE_QUOTE
        &kp GRAVE     &kp QUESTION         &trans            &trans          &trans                &trans         &kp UNDERSCORE    &kp BACKSLASH          &kp COMMA           &kp DOT  &kp SLASH          &kp PIPE
                                                             &trans          &trans                &trans                 &trans           &trans             &trans
            >;
        };

        DVORAK {
            bindings = <
&trans  &kp SINGLE_QUOTE  &kp COMMA  &kp DOT   &kp P   &kp Y   &kp F   &kp G   &kp C  &kp R  &kp L     &tog 5
&trans             &kp A      &kp O    &kp E   &kp U   &kp I   &kp D   &kp H   &kp T  &kp N  &kp S  &kp MINUS
&trans     &kp SEMICOLON      &kp Q    &kp J   &kp K   &kp X   &kp B   &kp M   &kp W  &kp V  &kp Z     &trans
                                      &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
